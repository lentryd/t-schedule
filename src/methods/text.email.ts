import { Markup } from 'telegraf';

import { TextContext } from '@/context';
import calendarInfo from '@/messages/calendarInfo';
import { createRule } from '@/utils/calendar';
import messageManager from '@/utils/messageManager';

const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/;

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * @param ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
 * @returns –û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */
export default async function textEmail(ctx: TextContext): Promise<void> {
    const user = await ctx.user;

    if (!user.calendarId) {
        await ctx
            .reply(
                '–ü–æ—Ö–æ–∂–µ —É –≤–∞—Å –Ω–µ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –û–¥–Ω–∞–∫–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /student –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–≤—à–∏—Å—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.',

                Markup.inlineKeyboard([Markup.button.switchToCurrentChat('–°–æ–∑–¥–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å', '')])
            )
            .then((message) => messageManager(ctx, message));
        return;
    }

    const email = ctx.message.text.match(emailRegex)?.[0];

    if (!email) {
        return await ctx
            .reply(
                '–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–≤–µ—Ç–æ–≤ –≤ –≤–∞—à–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ –≤–∞—à–µ–º—É Google-–∞–∫–∫–∞—É–Ω—Ç—É, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º.\n\n–ü—Ä–∏–º–µ—Ä:\nexample@gmail.com',
                Markup.inlineKeyboard([Markup.button.callback('–û—Ç–º–µ–Ω–∞', 'cancel')])
            )
            .then((message) => messageManager(ctx, message));
    }

    const message = await ctx.reply('–î–æ–±–∞–≤–ª—è—é –ø–æ—á—Ç—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...');
    const ruleId = await createRule(user.calendarId, email).catch((err) => console.error(err));

    if (!ruleId) {
        await ctx.telegram.editMessageText(
            message.chat.id,
            message.message_id,
            ctx.inlineMessageId,
            '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòî\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.',
            Markup.inlineKeyboard([Markup.button.callback('–û—Ç–º–µ–Ω–∞', 'cancel')])
        );
        return;
    }

    user.hasEnteredEmail = true;
    await ctx.deleteMessage(message.message_id);
    await calendarInfo(ctx, `–¢–µ–ø–µ—Ä—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ ${email} –±—É–¥–µ—Ç —Ü–≤–µ—Ç–Ω–æ–µ`);
}
