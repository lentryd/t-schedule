import { Update } from 'telegraf/types';

import Context from '@/context';
import { studentList } from '@/utils/database';
import { formatStudent } from '@/utils/format';

const CACHE_TIPS = 0;
const CACHE_RESULT = 0;

/**
 * Inline-–æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ —Ñ–∞–º–∏–ª–∏–∏.
 * @param ctx InlineContext
 * @returns Promise<void>
 */
export default async function inlineStudent(ctx: Context<Update.InlineQueryUpdate>): Promise<void> {
    const { query } = ctx.inlineQuery;

    if (!query.trim()) {
        await ctx.answerInlineQuery(
            [
                {
                    id: 'tips',
                    type: 'article',
                    title: '–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é',
                    input_message_content: {
                        message_text: '/start',
                    },
                },
            ],
            { cache_time: CACHE_TIPS }
        );
    }

    const results = studentList
        .filter((student) => student.fullName.toLowerCase().startsWith(query.toLowerCase()))
        .slice(0, 10);

    await ctx.answerInlineQuery(
        results.length === 0
            ? [
                  {
                      id: 'tips',
                      type: 'article',
                      title: '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ üòî',
                      description: '–ï—Å–ª–∏ —Ñ–∞–º–∏–ª–∏—è –≤–≤–µ–¥–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ —Å—é–¥–∞',
                      input_message_content: {
                          message_text: '/auth',
                      },
                  },
              ]
            : results.map((student) => ({
                  id: student.id.toString(),
                  type: 'article',
                  title: student.fullName,
                  description: formatStudent(student).department,
                  input_message_content: {
                      message_text: `/student ${student.id}`,
                  },
              })),
        { cache_time: CACHE_RESULT }
    );
}
